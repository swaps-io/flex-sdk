import { expect } from 'chai';

import { flexCalcTree, flexCalcTreeHash } from '../src';

describe('flex-sdk/flexCalcTreeHash', function () {
  it('Should calc hash of tree with 1 leaf', function () {
    const hash = flexCalcTreeHash({
      tree: flexCalcTree({
        leaves: [
          '0x1111111111111111111111111111111111111111111111111111111111111111',
        ],
      }),
    });
    expect(hash).equal('0x1111111111111111111111111111111111111111111111111111111111111111');
  });

  it('Should calc hash of tree with 2 leaves', function () {
    const hash = flexCalcTreeHash({
      tree: flexCalcTree({
        leaves: [
          '0x1111111111111111111111111111111111111111111111111111111111111111',
          '0x2222222222222222222222222222222222222222222222222222222222222222',
        ],
      }),
    });
    expect(hash).equal('0x3e92e0db88d6afea9edc4eedf62fffa4d92bcdfc310dccbe943747fe8302e871');
  });

  it('Should calc hash of tree with 2 leaves in different order', function () {
    const hash = flexCalcTreeHash({
      tree: flexCalcTree({
        leaves: [
          '0x2222222222222222222222222222222222222222222222222222222222222222',
          '0x1111111111111111111111111111111111111111111111111111111111111111',
        ],
      }),
    });
    expect(hash).equal('0x3e92e0db88d6afea9edc4eedf62fffa4d92bcdfc310dccbe943747fe8302e871');
  });

  it('Should calc hash of tree with 3 leaves', function () {
    const hash = flexCalcTreeHash({
      tree: flexCalcTree({
        leaves: [
          '0x1111111111111111111111111111111111111111111111111111111111111111',
          '0x2222222222222222222222222222222222222222222222222222222222222222',
          '0x3333333333333333333333333333333333333333333333333333333333333333',
        ],
      }),
    });
    expect(hash).equal('0x87fbd8dad686d9536b2ef65757c3415df1b7a4664deb34eda3d91234936eb5fe');
  });

  it('Should calc hash of tree with 3 leaves in different order', function () {
    const hash = flexCalcTreeHash({
      tree: flexCalcTree({
        leaves: [
          '0x3333333333333333333333333333333333333333333333333333333333333333',
          '0x2222222222222222222222222222222222222222222222222222222222222222',
          '0x1111111111111111111111111111111111111111111111111111111111111111',
        ],
      }),
    });
    expect(hash).equal('0x87fbd8dad686d9536b2ef65757c3415df1b7a4664deb34eda3d91234936eb5fe');
  });

  it('Should calc hash of tree with 7 leaves', function () {
    const hash = flexCalcTreeHash({
      tree: flexCalcTree({
        leaves: [
          '0x1111111111111111111111111111111111111111111111111111111111111111',
          '0x2222222222222222222222222222222222222222222222222222222222222222',
          '0x3333333333333333333333333333333333333333333333333333333333333333',
          '0x4444444444444444444444444444444444444444444444444444444444444444',
          '0x5555555555555555555555555555555555555555555555555555555555555555',
          '0x6666666666666666666666666666666666666666666666666666666666666666',
          '0x7777777777777777777777777777777777777777777777777777777777777777',
        ],
      }),
    });
    expect(hash).equal('0x93d5a823d5eff50e7be8f71b8b6b05bb1a8b6efcff3b354dc562c9f291d34523');
  });

  it('Should calc hash of tree with 7 leaves in different order', function () {
    const hash = flexCalcTreeHash({
      tree: flexCalcTree({
        leaves: [
          '0x5555555555555555555555555555555555555555555555555555555555555555',
          '0x4444444444444444444444444444444444444444444444444444444444444444',
          '0x6666666666666666666666666666666666666666666666666666666666666666',
          '0x7777777777777777777777777777777777777777777777777777777777777777',
          '0x3333333333333333333333333333333333333333333333333333333333333333',
          '0x2222222222222222222222222222222222222222222222222222222222222222',
          '0x1111111111111111111111111111111111111111111111111111111111111111',
        ],
      }),
    });
    expect(hash).equal('0x93d5a823d5eff50e7be8f71b8b6b05bb1a8b6efcff3b354dc562c9f291d34523');
  });
});
