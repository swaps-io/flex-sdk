import { flexCalcTree, flexCalcTreeHash } from '../src';

test('Should calc hash of tree with 1 leaf', () => {
  const hash = flexCalcTreeHash({
    tree: flexCalcTree({
      leaves: ['0x1111111111111111111111111111111111111111111111111111111111111111'],
    }),
  });
  expect(hash).toEqual('0x1111111111111111111111111111111111111111111111111111111111111111');
});

test('Should calc hash of tree with 2 leaves', () => {
  const hash = flexCalcTreeHash({
    tree: flexCalcTree({
      leaves: [
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x2222222222222222222222222222222222222222222222222222222222222222',
      ],
    }),
  });
  expect(hash).toEqual('0x3e92e0db88d6afea9edc4eedf62fffa4d92bcdfc310dccbe943747fe8302e871');
});

test('Should calc hash of tree with 2 leaves in different order', () => {
  const hash = flexCalcTreeHash({
    tree: flexCalcTree({
      leaves: [
        '0x2222222222222222222222222222222222222222222222222222222222222222',
        '0x1111111111111111111111111111111111111111111111111111111111111111',
      ],
    }),
  });
  expect(hash).toEqual('0x3e92e0db88d6afea9edc4eedf62fffa4d92bcdfc310dccbe943747fe8302e871');
});

test('Should calc hash of tree with 3 leaves', () => {
  const hash = flexCalcTreeHash({
    tree: flexCalcTree({
      leaves: [
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x2222222222222222222222222222222222222222222222222222222222222222',
        '0x3333333333333333333333333333333333333333333333333333333333333333',
      ],
    }),
  });
  expect(hash).toEqual('0x87fbd8dad686d9536b2ef65757c3415df1b7a4664deb34eda3d91234936eb5fe');
});

test('Should calc hash of tree with 3 leaves in different order', () => {
  const hash = flexCalcTreeHash({
    tree: flexCalcTree({
      leaves: [
        '0x2222222222222222222222222222222222222222222222222222222222222222',
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x3333333333333333333333333333333333333333333333333333333333333333',
      ],
    }),
  });
  expect(hash).toEqual('0x87fbd8dad686d9536b2ef65757c3415df1b7a4664deb34eda3d91234936eb5fe');
});

test('Should calc hash of tree with 11 leaves', () => {
  const hash = flexCalcTreeHash({
    tree: flexCalcTree({
      leaves: [
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x2222222222222222222222222222222222222222222222222222222222222222',
        '0x3333333333333333333333333333333333333333333333333333333333333333',
        '0x4444444444444444444444444444444444444444444444444444444444444444',
        '0x5555555555555555555555555555555555555555555555555555555555555555',
        '0x6666666666666666666666666666666666666666666666666666666666666666',
        '0x7777777777777777777777777777777777777777777777777777777777777777',
        '0x8888888888888888888888888888888888888888888888888888888888888888',
        '0x9999999999999999999999999999999999999999999999999999999999999999',
        '0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
        '0xbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb',
      ],
    }),
  });
  expect(hash).toEqual('0x907334f684e63958d6d40bbd48ac0e777a55a972f63d23b2c59dd9cb0741482d');
});

test('Should calc hash of tree with 11 leaves in different order', () => {
  const hash = flexCalcTreeHash({
    tree: flexCalcTree({
      leaves: [
        '0x2222222222222222222222222222222222222222222222222222222222222222',
        '0x1111111111111111111111111111111111111111111111111111111111111111',
        '0x3333333333333333333333333333333333333333333333333333333333333333',
        '0x5555555555555555555555555555555555555555555555555555555555555555',
        '0x4444444444444444444444444444444444444444444444444444444444444444',
        '0x6666666666666666666666666666666666666666666666666666666666666666',
        '0x8888888888888888888888888888888888888888888888888888888888888888',
        '0x7777777777777777777777777777777777777777777777777777777777777777',
        '0x9999999999999999999999999999999999999999999999999999999999999999',
        '0xbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb',
        '0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
      ],
    }),
  });
  expect(hash).toEqual('0x907334f684e63958d6d40bbd48ac0e777a55a972f63d23b2c59dd9cb0741482d');
});
